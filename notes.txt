one way to enable button click 
- HTML-create input filed
- HTML-create button 
- JS write function to Log out "Button clicked!" when the user clicks the "SAVE INPUT" button- this includes writing onClick() in HTML


"professional" way to enable button click 
- grab id of the HTML element you want to hook the event listner onto, in this case "input-btn"
- JS link the id of the HTML element to addEventListener
- specify what type of event to listen for, in this case "click", function(){ insetr function for click event}


JS- Create two variables:
myLeads -> should be assigned to an empty array
inputEl -> should be assigned to the text input field

Push the value from the inputEl into the myLeads array 

HTML-Create an unordered list element (<ul>) with id="ul-el" -->
JS- Grab the unordered list and store it in a const variable called ulEl

//Use createElement() and append() instead of innerHTML
const li = document.createElement("li")
li.textContent = myLeads[i]
ulEl.append(li)

Wrap the lead in an anchor tag (<a>) inside the <li>
Can you make the link open in a new tab?

  for (let i = 0; i < myLeads.length; i++) {
     // listItems += "<li><a target='_blank' href='" + myLeads[i] + "'>" + myLeads[i] + "</a></li>"
     // template strings/template literals provide cleaner code   
        listItems += `
            <li>
                <a target='_blank' href='${myLeads[i]}'>
                    ${myLeads[i]}
                </a>
            </li>
        `
    }

Turn the myLeads string into an array
Push a new value to the array
Turn the array into a string again
Console.log the string using typeof to verify that it's a string
